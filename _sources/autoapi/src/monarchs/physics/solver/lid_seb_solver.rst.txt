src.monarchs.physics.solver.lid_seb_solver
==========================================

.. py:function:: src.monarchs.physics.solver.lid_seb_solver(x, args, v_lid=False)

   scipy.optimise.fsolve version of the lid surface energy balance solver.
   Solves core.choose_solver.sfc_energy_lid or core.choose_solver.sfc_energy_vlid, which are defined
   in the body of get_lid_surface_energy_equations.
   Called in lid_functions.virtual_lid and lid_functions.lid_development.

   :Parameters: * **x** (*array_like, float, dimension(cell.vert_grid_lid)*) -- Initial estimate of the lid temperature. We only use the first value (i.e. the surface value). [K]
                * **args** (*array_like*) -- Array of arguments to pass into the function.
                * **v_lid** (*bool, optional*) -- Flag that asks whether we want to solve the surface energy balance for a virtual lid (if True), or
                  a true lid (if False). Default False.

   :returns: * **root** (*float*) -- the calculated lid surface temperature, either after successful completion or
               at the end of the final iteration for an unsuccessful solution. [K]
             * **infodict** (*dict*) -- A dictionary of optional outputs, such as the number of Jacobian iterations, etc.
               See scipy.optimize.fsolve documentation for more details on the content of infodict.
             * **ier** (*int*) -- An integer flag. Set to 1 if a solution was found, otherwise refer to mesg for more information.
             * **mesg** (*str*) -- If no solution is found, mesg details the cause of failure.

