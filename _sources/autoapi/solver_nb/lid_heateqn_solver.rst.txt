solver_nb.lid_heateqn_solver
============================

.. py:function:: solver_nb.lid_heateqn_solver(x, args)

   NumbaMinpack version of the lid heat equation solver. Solves physics.Numba.heateqn.

   Called in lid_functions.lid_development.

   :Parameters: * **x** (*array_like, float, dimension(vert_grid)*) -- Initial guess at the lid column temperature. [K]
                * **args** (*array_like*) -- Array of arguments to pass into the function. See args_array for details.

   :returns: * **root** (*array_like, float, dimension(core.iceshelf_class.IceShelf.vert_grid_lid)*) -- Vector containing the calculated lid column temperature, either after successful completion or
               at the end of the final iteration for an unsuccessful solution. [K]
             * **fvec** (*array_like, float, dimension(core.iceshelf_class.IceShelf.vert_grid_lid)*) -- Vector containing the function evaluated at root, i.e. the raw output.
             * **success** (*bool*) -- Boolean flag determining whether the solution converged, or whether there was an error.
             * **info** (*int*) -- Integer flag containing information on the status of the solution.
               From the Minpack hybrd documentation:
               !!  * ***info = 0*** improper input parameters.
               !!  * ***info = 1*** relative error between two consecutive iterates
               !!    is at most `xtol`.
               !!  * ***info = 2*** number of calls to `fcn` has reached or exceeded
               !!    `maxfev`.
               !!  * ***info = 3*** `xtol` is too small. no further improvement in
               !!    the approximate solution `x` is possible.
               !!  * ***info = 4*** iteration is not making good progress, as
               !!    measured by the improvement from the last
               !!    five jacobian evaluations.
               !!  * ***info = 5*** iteration is not making good progress, as
               !!    measured by the improvement from the last
               !!    ten iterations.

