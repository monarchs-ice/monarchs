solver_nb.lake_solver
=====================

.. py:function:: solver_nb.lake_solver(x, args, formation=False)

   NumbaMinpack version of the lake solver.
   Solves core.choose_solver.dev_eqn or core.choose_solver.form_eqn, which are defined
   in the body of get_lake_surface_energy_equations.

   :Parameters: * **x** (*array_like, float, dimension(cell.vert_grid_lake)*) -- Initial estimate of the lake temperature profile. We only use the first element in the solver here
                  (in both the lake formation and lake development cases).
                * **args** (*array_like*) -- Array of input arguments to the solver. See documentation for form_eqn and dev_eqn for details.
                * **formation** (*bool*) -- Flag to determine whether we want the lake *formation* equation, or the lake *development* equation.
                  Defaults to the development equation, unless specified.

   :returns: * **root** (*float*) -- Calculated lake surface temperature, either after successful completion or
               at the end of the final iteration for an unsuccessful solution. [K]
             * **fvec** (*array_like, float, dimension(core.iceshelf_class.IceShelf.vert_grid)*) -- Vector containing the function evaluated at root, i.e. the raw output.
             * **success** (*bool*) -- Boolean flag determining whether the solution converged, or whether there was an error.
             * **info** (*int*) -- Integer flag containing information on the status of the solution.

